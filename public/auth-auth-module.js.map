{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/pages/main/main.component.ts","./src/app/auth/pages/main/main.component.html","./src/app/auth/auth.module.ts","./src/app/auth/pages/login/loginv2.component.ts","./src/app/auth/pages/login/loginv2.component.html","./src/app/auth/pages/registro/registro.component.ts","./src/app/auth/pages/registro/registro.component.html","./src/app/auth/pages/login/login.component.ts","./src/app/auth/pages/login/login.component.html"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainComponent } from './pages/main/main.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { Loginv2Component } from './pages/login/loginv2.component';\nimport { RegistroComponent } from './pages/registro/registro.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainComponent,\n    children: [\n      // { path: 'login', component: LoginComponent },\n      { path: 'login', component: Loginv2Component },\n      { path: 'registro', component: RegistroComponent },\n      { path: '**', redirectTo: 'login' },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div\n  class=\"\n    container-fluid\n    main\n    d-flex\n    justify-content-center\n    animate__animated animate__fadeIn animate__delay-1s\n  \"\n>\n  <div class=\"col-auto d-flex align-items-center\">\n    <router-outlet></router-outlet>\n\n  </div>\n\n\n\n\n\n\n</div>\n\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegistroComponent } from './pages/registro/registro.component';\nimport { MainComponent } from './pages/main/main.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material/material.module';\nimport { Loginv2Component } from './pages/login/loginv2.component';\n\n\n\n@NgModule({\n  declarations: [LoginComponent,Loginv2Component, RegistroComponent, MainComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MaterialModule\n  ]\n})\nexport class AuthModule { }\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './loginv2.component.html',\n  styleUrls: [],\n})\nexport class Loginv2Component {\n  hide = true;\n\n  miFormulario: FormGroup = this.fb.group({\n    correo: ['test1@test.com', [Validators.required, Validators.email]],\n    password: ['123456', [Validators.required, Validators.minLength(6)]],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  login() {\n    // this.authService.validarToken().subscribe( resp => console.log(resp))\n    // console.log(this.miFormulario.value);\n\n    const { correo, password } = this.miFormulario.value;\n\n    // this.router.navigateByUrl('/productos');\n    this.authService.login(correo, password).subscribe((resp) => {\n      // console.log(resp);\n      if (resp === 'Login Ok! ') {\n        this.router.navigateByUrl('/store/tienda');\n      } else {\n        // TODO: MOSTRAR MENSAJE DE ERROR\n        Swal.fire('Error', resp, 'error');\n      }\n    });\n  }\n}\n","<div class=\"col animate__animated animate__fadeIn\">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Login</mat-card-title>\n    </mat-card-header>\n\n    <mat-card-content>\n      <form autocomplete=\"off\" [formGroup]=\"miFormulario\" (ngSubmit)=\"login()\">\n        <div class=\"mb-3\">\n          <label for=\"exampleInputEmail1\" class=\"form-label\"\n            >Correo Electronico:</label\n          >\n          <input\n            type=\"email\"\n            class=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n            formControlName=\"correo\"\n          />\n          <!-- <div id=\"emailHelp\" class=\"form-text\">\n            We'll never share your email with anyone else.\n          </div> -->\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"exampleInputPassword1\" class=\"form-label\"\n            >Password:</label\n          >\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            id=\"exampleInputPassword1\"\n            formControlName=\"password\"\n          />\n        </div>\n        <div class=\"mb-3 form-check\">\n          <label class=\"form-check-label\" for=\"exampleCheck1\"\n            >¿No tienes cuenta?\n          </label>\n          <a routerLink=\"/auth/registro\" class=\"txt2\"> Crea una aquí </a>\n        </div>\n\n\n\n        <button\n          mat-raised-button\n          type=\"submit\"\n          color=\"primary\"\n          [disabled]=\"miFormulario.invalid\"\n        >\n          Login\n        </button>\n      </form>\n\n\n\n    </mat-card-content>\n  </mat-card>\n</div>\n\n\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { AuthService } from '../../services/auth.service';\nimport { UsuarioEnvio } from '../../interfaces/usuarioResult.interface';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: []\n})\nexport class RegistroComponent {\n\n  miFormulario: FormGroup = this.fb.group({\n    nombre: ['jsmith', [Validators.required, Validators.minLength(3)]],\n    correo: ['test1@test.com', [Validators.required, Validators.email]],\n    password: ['123456', [Validators.required, Validators.minLength(6)]],\n    telefono: ['3223080414', [Validators.required, Validators.minLength(7)]]\n  })\n\n  constructor(private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService) { }\n\n  registro() {\n\n    const { nombre, correo, password, telefono } = this.miFormulario.value;\n    const rol = 'USER_ROLE';\n\n    const usuarioEnv: UsuarioEnvio = {\n      nombre,\n      correo,\n      rol,\n      password,\n      telefono,\n    }\n\n\n    this.authService.registro(usuarioEnv).subscribe((resp) => {\n      console.log(resp);\n      if (resp.ok === true) {\n        this.router.navigateByUrl('/productos');\n      } else {\n        // TODO: MOSTRAR MENSAJE DE ERROR\n        Swal.fire('Error', resp.msg, 'error')\n      }\n\n\n    })\n\n\n\n\n  }\n\n}\n","<!-- <form\n  class=\"login100-form\"\n  autocomplete=\"off\"\n  [formGroup]=\"miFormulario\"\n  (ngSubmit)=\"registro()\"\n>\n  <span class=\"login100-form-title p-b-49\" >\n    Nuevo usuario\n  </span>\n  <div class=\"wrap-input100 m-b-23\" >\n    <span class=\"label-input100\">Nombre</span>\n    <input\n      class=\"input100\"\n      type=\"text\"\n      formControlName=\"nombre\"\n      placeholder=\"Ingrese su nombre\"\n    />\n    <span class=\"focus-input100\"></span>\n  </div>\n\n  <div class=\"wrap-input100 m-b-23\" >\n    <span class=\"label-input100\">Email</span>\n    <input\n      class=\"input100\"\n      type=\"email\"\n      formControlName=\"correo\"\n      placeholder=\"Ingrese su email\"\n    />\n    <span class=\"focus-input100\"></span>\n  </div>\n\n  <div class=\"wrap-input100\">\n    <span class=\"label-input100\">Password</span>\n    <input\n      class=\"input100\"\n      type=\"password\"\n      formControlName=\"password\"\n      placeholder=\"Ingrese su contraseña\"\n    />\n    <span class=\"focus-input100\"></span>\n  </div>\n\n  <div class=\"text-right p-t-8 p-b-31\" ></div>\n\n  <div class=\"container-login100-form-btn\">\n    <div class=\"wrap-login100-form-btn\">\n      <div class=\"login100-form-bgbtn\"></div>\n      <button class=\"login100-form-btn\">Registro</button>\n    </div>\n  </div>\n\n  <div class=\"flex-col-c p-d-60\" >\n    <span class=\"txt1 p-b-17 \"  > ¿Ya tienes una cuenta? </span>\n\n    <a routerLink=\"/auth\" class=\"txt2\"> Ingresa aquí </a>\n  </div>\n</form> -->\n\n<div class=\"col container-fluid  animate__animated animate__fadeIn \">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Nuevo Usuario</mat-card-title>\n    </mat-card-header>\n\n    <mat-card-content>\n      <form\n        autocomplete=\"off\"\n        [formGroup]=\"miFormulario\"\n        (ngSubmit)=\"registro()\"\n      >\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Nombre</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"\"\n            aria-describedby=\"emailHelp\"\n            formControlName=\"nombre\"\n          />\n          <!-- <div id=\"emailHelp\" class=\"form-text\">\n            We'll never share your email with anyone else.\n          </div> -->\n        </div>\n\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Correo:</label>\n          <input\n            type=\"email\"\n            class=\"form-control\"\n            id=\"\"\n            formControlName=\"correo\"\n          />\n        </div>\n\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Telefono</label>\n          <input\n            type=\"tel\"\n            class=\"form-control\"\n            id=\"\"\n            aria-describedby=\"emailHelp\"\n            formControlName=\"telefono\"\n          />\n          <!-- <div id=\"emailHelp\" class=\"form-text\">\n            We'll never share your email with anyone else.\n          </div> -->\n        </div>\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Contraseña:</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            id=\"\"\n            formControlName=\"password\"\n          />\n        </div>\n        <div class=\"mb-3 form-check\">\n          <label class=\"form-check-label\">¿Ya tienes una cuenta? </label>\n          <a routerLink=\"/auth/login\" class=\"txt2\"> Ingresa aquí </a>\n        </div>\n\n        <button\n          mat-raised-button\n          type=\"submit\"\n          color=\"primary\"\n          [disabled]=\"miFormulario.invalid\"\n        >\n          Registrarse\n        </button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  // styleUrls: ['../main/main.component.css']\n})\nexport class LoginComponent {\n  miFormulario: FormGroup = this.fb.group({\n    correo: ['test1@test.com', [Validators.required, Validators.email]],\n    password: ['123456', [Validators.required, Validators.minLength(6)]],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  login() {\n\n\n\n    const { correo, password } = this.miFormulario.value;\n\n\n    this.authService.login(correo, password).subscribe((resp) => {\n      console.log(resp);\n      if (resp === 'Login Ok! ') {\n        this.router.navigateByUrl('/productos');\n      } else {\n\n        Swal.fire('Error',resp ,'error')\n      }\n    });\n\n\n  }\n}\n","<form\n  class=\"login100-form\"\n  autocomplete=\"off\"\n  [formGroup]=\"miFormulario\"\n  (ngSubmit)=\"login()\"\n>\n  <span class=\"login100-form-title p-b-49\" > Login </span>\n\n  <div class=\"wrap-input100 m-b-50\" >\n    <span class=\"label-input100\">Email</span>\n    <input\n      class=\"input100\"\n      type=\"email\"\n      formControlName=\"correo\"\n      placeholder=\"Ingrese su email\"\n    />\n    <span class=\"focus-input100\"></span>\n  </div>\n\n  <div class=\"wrap-input100 m-b-23\" >\n    <span class=\"label-input100\">Password</span>\n    <input\n      class=\"input100\"\n      type=\"password\"\n      formControlName=\"password\"\n      placeholder=\"Ingrese su contraseña\"\n    />\n    <span class=\"focus-input100\"></span>\n  </div>\n\n  <div class=\"text-right pt-8 p-b-31\" >\n  <div class=\"container-login100-form-btn\">\n    <div class=\"wrap-login100-form-btn\">\n      <div class=\"login100-form-bgbtn\"></div>\n      <button\n        class=\"login100-form-btn\"\n        type=\"submit\"\n        [disabled]=\"miFormulario.invalid\"\n      >\n        Login\n      </button>\n    </div>\n  </div>\n</div>\n  <div class=\"flex-col-c p-t-60\" >\n    <span class=\"txt1 p-b-17\" > ¿No tienes cuenta? </span>\n\n    <a routerLink=\"/auth/registro\" class=\"txt2\"> Crear una aquí </a>\n  </div>\n\n  <!-- <div>\n    <h1>Google Sign in</h1>\n    <hr>\n\n    <div class=\"g-signin\" data-onsuccess=\"onSignIn\"></div>\n    <a href=\"#\" onclick=\"signOut();\">Sign out</a>\n  </div> -->\n</form>\n\n\n<!-- Login google -->\n<p>hola</p>\n<div\n  id=\"g_id_onload\"\n  data-client_id=\"777656063619-b6315q5btnanlf5vd4dqk1m80lrjvljh.apps.googleusercontent.com\"\n  data-auto_prompt=\"false\"\n  data-callback=\"handleCredentialResponse\"\n></div>\n<div\n  class=\"g_id_signin\"\n  data-type=\"standard\"\n  data-shape=\"pill\"\n  data-theme=\"filled_black\"\n  data-text=\"$ {button.text}\"\n  data-size=\"large\"\n  data-logo_alignment=\"left\"\n></div>\n\n<button id=\"google_signout\">Sign Out</button>\n\n\n  <!-- //google login -->\n  <script src=\"https://accounts.google.com/gsi/client\" async defer></script>\n\n  <script>\n    function handleCredentialResponse(response) {\n      // decodeJwtResponse() is a custom function defined by you\n      // to decode the credential response.\n      // const responsePayload = decodeJwtResponse(response.credential);\n      //Google token : ID_TOKEN\n      // console.log(\"id_token\", response.credential);\n\n      const body = { id_token: response.credential };\n\n      fetch(\"http://localhost:8080/api/auth/google\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      })\n        .then((resp) => resp.json())\n        .then((resp) => {\n          localStorage.setItem(\"email\", resp.usuario.correo);\n          localStorage.setItem('x-token', resp.token);\n          console.log(resp);\n        })\n        .catch(console.warn);\n    }\n\n    const button = document.getElementById(\"google_signout\");\n\n    button.onclick = () => {\n      console.log(google.accounts.id);\n      google.accounts.id.disableAutoSelect();\n      google.accounts.id.revoke(localStorage.getItem(\"email\"), (done) => {\n        localStorage.clear();\n        location.reload();\n      });\n    };\n  </script>\n"],"sourceRoot":"webpack:///"}